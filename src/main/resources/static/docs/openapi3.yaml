openapi: 3.0.1
info:
  title: gagebu
  description: SU - 본인의 소비내역을 기록/관리 하는 가계부 API 서버
  version: 0.0.1
servers:
- url: http://localhost:8080
tags: []
paths:
  /api/v1/records:
    get:
      tags:
      - Record API
      summary: 거래내역 다중 조회 API
      description: 거래내역 다중 조회 API 입니다.
      operationId: record-findAll
      parameters:
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjEsImlhdCI6MTY2NDM0OTk0OCwiZXhwIjoxNjY0MzUxNzQ4fQ.b5dljIsJWAbbzqaFrf6CUTgZ_MGLSrpDgMLD-fj1km-ODr5Mr8pmAZV4_Lsk_D5QUOhq72oqh4P2-kOxIm1NMg
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/거래내역 다중조회 응답'
              examples:
                record-findAll:
                  value: "{\r\n  \"records\" : [ {\r\n    \"name\" : \"테스트 이름 - 61c7ca97cf\"\
                    ,\r\n    \"category\" : \"FOOD\",\r\n    \"money\" : 1000,\r\n\
                    \    \"memo\" : \"테스트 메모 -2f3a200e12\",\r\n    \"createdAt\" :\
                    \ \"2022-09-28T16:25:48.474128\",\r\n    \"updatedAt\" : \"2022-09-28T16:25:48.474128\"\
                    \r\n  }, {\r\n    \"name\" : \"테스트 이름 - dcffa0a1d8\",\r\n    \"\
                    category\" : \"FOOD\",\r\n    \"money\" : 1000,\r\n    \"memo\"\
                    \ : \"테스트 메모 -a7e28a27d6\",\r\n    \"createdAt\" : \"2022-09-28T16:25:48.482128\"\
                    ,\r\n    \"updatedAt\" : \"2022-09-28T16:25:48.482128\"\r\n  },\
                    \ {\r\n    \"name\" : \"테스트 이름 - fca6dc2854\",\r\n    \"category\"\
                    \ : \"FOOD\",\r\n    \"money\" : 1000,\r\n    \"memo\" : \"테스트\
                    \ 메모 -779be06df0\",\r\n    \"createdAt\" : \"2022-09-28T16:25:48.483128\"\
                    ,\r\n    \"updatedAt\" : \"2022-09-28T16:25:48.483128\"\r\n  },\
                    \ {\r\n    \"name\" : \"테스트 이름 - c14128e78a\",\r\n    \"category\"\
                    \ : \"FOOD\",\r\n    \"money\" : 1000,\r\n    \"memo\" : \"테스트\
                    \ 메모 -6672699249\",\r\n    \"createdAt\" : \"2022-09-28T16:25:48.484129\"\
                    ,\r\n    \"updatedAt\" : \"2022-09-28T16:25:48.484129\"\r\n  }\
                    \ ]\r\n}"
      security:
      - bearerAuthJWT: []
    post:
      tags:
      - Record API
      summary: 거래내역 생성 API
      description: 거래내역을 생성하는 API 입니다.
      operationId: record-create
      parameters:
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjEyLCJpYXQiOjE2NjQzNDk5NTAsImV4cCI6MTY2NDM1MTc1MH0.DfD7gYsxBW5kwokyAV-987px4RYcIP_Jyl7t6h8XGoGHpp7TmLYHnB5osd0glk2ejQXjlekkbR_5hWP3pQ-NJw
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/거래내역 생성 요청'
            examples:
              record-create:
                value: "{\r\n  \"name\" : \"테스트 거래\",\r\n  \"category\" : \"SALARY\"\
                  ,\r\n  \"money\" : 1000000,\r\n  \"memo\" : \"테스트 메모 입니다\"\r\n}"
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 생성된 거래내역 URI
              schema:
                type: string
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/거래내역 생성 응답'
              examples:
                record-create:
                  value: "{\r\n  \"id\" : 13\r\n}"
      security:
      - bearerAuthJWT: []
  /api/v1/users:
    post:
      tags:
      - User API
      summary: 회원가입 API
      description: 회원가입을 요청하는 API 입니다.
      operationId: user-signup
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/회원가입 요청'
            examples:
              user-signup:
                value: "{\r\n  \"email\" : \"a93007d021@test.com\",\r\n  \"password\"\
                  \ : \"2a172c99-59c0-4805-a7c0-fb6be29cbefd\"\r\n}"
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 회원가입 된 유저 URI
              schema:
                type: string
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/회원가입 응답'
              examples:
                user-signup:
                  value: "{\r\n  \"id\" : 15\r\n}"
  /api/v1/auth/login:
    post:
      tags:
      - User API
      summary: 로그인 API
      description: 로그인을 요청하는 API 입니다.
      operationId: user-login
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/로그인 요청'
            examples:
              user-login:
                value: "{\r\n  \"email\" : \"6acfce9472@test.com\",\r\n  \"password\"\
                  \ : \"f01dc69e-bcb3-41dd-af39-431167427b14\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/로그인 응답'
              examples:
                user-login:
                  value: "{\r\n  \"accessToken\" : \"eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjE0LCJpYXQiOjE2NjQzNDk5NTAsImV4cCI6MTY2NDM1MTc1MH0.ORftu4tKw9COUlIkoF--42VQ0KB_sScpBRIxi0qrqeBo2o9_OVb83G832Imy75e4XE-HcNYv9z03wXlV_rAQjA\"\
                    \r\n}"
  /api/v1/records/{recordId}:
    get:
      tags:
      - Record API
      summary: 거래내역 단건 조회 API
      description: 거래내역 단건 조회 API 입니다.
      operationId: record-findOne
      parameters:
      - name: recordId
        in: path
        description: 거래내역 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjYsImlhdCI6MTY2NDM0OTk0OSwiZXhwIjoxNjY0MzUxNzQ5fQ.A5y2T1svxAjbXQmadAdU3awKzIXWPwpnxM7OWSYhCUgC24vIjR10Gd7LHx6QK1vPFsQ9oSgaG6lA8hqjWyyWqA
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/거래내역 단건조회 응답'
              examples:
                record-findOne:
                  value: "{\r\n  \"name\" : \"테스트 이름 - 8175e970ee\",\r\n  \"category\"\
                    \ : \"FOOD\",\r\n  \"money\" : 1000,\r\n  \"memo\" : \"테스트 메모\
                    \ -89e128818b\",\r\n  \"createdAt\" : \"2022-09-28T16:25:49.479131\"\
                    ,\r\n  \"updatedAt\" : \"2022-09-28T16:25:49.479131\"\r\n}"
      security:
      - bearerAuthJWT: []
    delete:
      tags:
      - Record API
      summary: 거래내역 삭제 API
      description: 거래내역을 삭제하는 API 입니다.
      operationId: record-delete
      parameters:
      - name: recordId
        in: path
        description: 거래내역 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjEwLCJpYXQiOjE2NjQzNDk5NTAsImV4cCI6MTY2NDM1MTc1MH0.qm8W7_eWeieTtHWhCaGiIHMKdN4hp46OdyR2KFv1l_jvn8vpKEYyBCMynPm0OmgO_2L8Rdh2qAW4P7g6KiCtFQ
      responses:
        "204":
          description: "204"
      security:
      - bearerAuthJWT: []
    patch:
      tags:
      - Record API
      summary: 거래내역 수정 API
      description: 거래내역을 수정하는 API 입니다.
      operationId: record-edit
      parameters:
      - name: recordId
        in: path
        description: 거래내역 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjgsImlhdCI6MTY2NDM0OTk0OSwiZXhwIjoxNjY0MzUxNzQ5fQ.B4tr0wF6GA-awrn9lPOYB3HatyP7wJqa49vHlB7r-N8AYPsK8Ih5ioHQMLxdEdkIa3-GTHmtfSXY43BvhIzzBw
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/거래내역 수정 요청'
            examples:
              record-edit:
                value: "{\r\n  \"money\" : 1000,\r\n  \"memo\" : \"수정된 메모\"\r\n}"
      responses:
        "204":
          description: "204"
      security:
      - bearerAuthJWT: []
  /api/v1/users/{userId}:
    get:
      tags:
      - User API
      summary: 유저 조회 API
      description: 유저를 단일 조회하는 API 입니다.
      operationId: user-findOne
      parameters:
      - name: userId
        in: path
        description: 유저 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: JWT accessToken
        required: true
        schema:
          type: string
        example: Bearer eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjoiTE9HSU4iLCJ1c2VySWQiOjE2LCJpYXQiOjE2NjQzNDk5NTAsImV4cCI6MTY2NDM1MTc1MH0.Gg802cWRumNuVmF_fCjQ0BOAXj0zj1AVzsaL-fcPnhDJfAmn1R-r-TwsTT8MZ1KRdB24HXgzoNzPUyS0u4uPcA
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/유저 단일 조회 응답'
              examples:
                user-findOne:
                  value: "{\r\n  \"userId\" : 16,\r\n  \"email\" : \"9b97a6cb21@test.com\"\
                    \r\n}"
      security:
      - bearerAuthJWT: []
components:
  schemas:
    거래내역 다중조회 응답:
      title: 거래내역 다중조회 응답
      type: object
      properties:
        records:
          type: array
          items:
            type: object
            properties:
              createdAt:
                type: string
                description: 거래내역 생성 일자
              money:
                type: number
                description: 거래내역 금액
              name:
                type: string
                description: 거래내역 이름
              memo:
                type: string
                description: 거래내역 메모
              category:
                type: string
                description: 거래내역 종류
              updatedAt:
                type: string
                description: 거래내역 마지막 수정일자
    거래내역 생성 응답:
      title: 거래내역 생성 응답
      type: object
      properties:
        id:
          type: number
          description: 생성된 거래내역 아이디
    회원가입 요청:
      title: 회원가입 요청
      type: object
      properties:
        password:
          type: string
          description: 로그인 비밀번호
        email:
          type: string
          description: 로그인 이메일
    로그인 요청:
      title: 로그인 요청
      type: object
      properties:
        password:
          type: string
          description: 로그인 비밀번호
        email:
          type: string
          description: 로그인 이메일
    거래내역 수정 요청:
      title: 거래내역 수정 요청
      type: object
      properties:
        money:
          type: number
          description: 거래내역 금액
        memo:
          type: string
          description: 거래내역 메모
    로그인 응답:
      title: 로그인 응답
      type: object
      properties:
        accessToken:
          type: string
          description: 생성된 유저 액세스 토큰
    거래내역 단건조회 응답:
      title: 거래내역 단건조회 응답
      type: object
      properties:
        createdAt:
          type: string
          description: 거래내역 생성 일자
        money:
          type: number
          description: 거래내역 금액
        name:
          type: string
          description: 거래내역 이름
        memo:
          type: string
          description: 거래내역 메모
        category:
          type: string
          description: 거래내역 종류
        updatedAt:
          type: string
          description: 거래내역 마지막 수정일자
    유저 단일 조회 응답:
      title: 유저 단일 조회 응답
      type: object
      properties:
        userId:
          type: number
          description: 유저 아이디
        email:
          type: string
          description: 유저 이메일
    거래내역 생성 요청:
      title: 거래내역 생성 요청
      type: object
      properties:
        money:
          type: number
          description: 거래내역 금액
        name:
          type: string
          description: 거래내역 이름
        memo:
          type: string
          description: 거래내역 메모
        category:
          type: string
          description: 거래내역 종류
    회원가입 응답:
      title: 회원가입 응답
      type: object
      properties:
        id:
          type: number
          description: 생성된 유저 아이디
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
