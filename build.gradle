plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'com.epages.restdocs-api-spec' version '0.16.2'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'java'
}

group = 'com.payhere'
version = '0.0.1'
sourceCompatibility = '17'
project.ext.host = ("$System.env.SERVER_NAME" == 'null') ? 'http://localhost:8080' : "$System.env.SERVER_NAME"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // logging aop tmp
    implementation group: 'org.json', name: 'json', version: '20201115'

    // web & security
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // validation
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // @ConfigurationProperties
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // Restdocs -> Swagger
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy 'copyDocument'
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
openapi3 {
    println("target server : $project.host")
    server = project.host
    title = 'gagebu'
    description = 'SU - 본인의 소비내역을 기록/관리 하는 가계부 API 서버'
    version = project.version.toString().toUpperCase()
    format = 'yaml'
}

task copyDocument(type: Copy) {
    dependsOn("openapi3")
    from file("$buildDir/api-spec/openapi3.yaml")
    into file("src/main/resources/static/docs/.")
}

jib {
    from {
        image = "amazoncorretto:17.0.4-al2"
        platforms {
            platform {
                architecture = "arm64"
                os = "linux"
            }
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
    to {
        image = "kimziou77/${project.name}"
        tags = ["${project.version.toString().toLowerCase()}"]
    }
    container {
        environment = ["PROFILE": "local"]
        jvmFlags = ['-Xms512m', '-Dspring.profiles.active=${PROFILE}']
    }
}

gradle.taskGraph.beforeTask { Task task ->
    println "executing $task ... *** start ***"
}
gradle.taskGraph.afterTask { Task task ->
    println "executing $task ... ***  end  ***"
}
